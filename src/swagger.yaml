swagger: "2.0"
info:
  title: Attested API
  description: Attested APIs for internal use only!
  version: "0.0.1"
  contact:
    email: hello@attested.in
# during dev, should point to your local machine
host: localhost:7000
# basePath prefixes all resource paths
basePath: /api/v1
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  # Candidates relaed apis
  /candidates:
    get:
      security:
        - Bearer: []
      tags:
        - Candidates
      summary: Fetch candidates
      description: Fetch andidates
      parameters:
        - name: candidateId
          in: query
          description: Provide candidateId
          required: false
          type: string
        - name: name
          in: query
          description: name of candidate
          required: false
          type: string
        - name: email
          in: query
          description: email of candidate
          required: false
          type: string
        - name: mobile
          in: query
          description: mobile of candidate
          required: false
          type: string
        - name: orgId
          in: query
          description: Provide orgId (to fetch list of candidates which doesn't have active connection with this orgId)
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"
  /candidates/signup:
    post:
      tags:
        - Candidates
      summary: Signup
      description: New candidate Signup
      parameters:
        - in: body
          name: body
          description: Provide user info and strong password (at least 1 capital, 1 numeric and 1 special character)
          required: true
          schema:
            $ref: "#/definitions/CandidateSignup"
      responses:
        "200":
          description: Signup Successful
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"
  /candidates/login:
    post:
      tags:
        - Candidates
      summary: Login
      description: Existing user login
      parameters:
        - in: body
          name: body
          description: Provide email id and password
          required: true
          schema:
            $ref: "#/definitions/UserLogin"
      responses:
        "200":
          description: Login Successful
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"

  # Orgs relaed apis
  /orgs/signup:
    post:
      tags:
        - Orgs
      summary: Signup
      description: New org Signup
      parameters:
        - in: body
          name: body
          description: Provide org info and strong password (at least 1 capital, 1 numeric and 1 special character)
          required: true
          schema:
            $ref: "#/definitions/OrgSignup"
      responses:
        "200":
          description: Signup Successful
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"
  /orgs/login:
    post:
      tags:
        - Orgs
      summary: Login
      description: Existing org login
      parameters:
        - in: body
          name: body
          description: Provide email id and password
          required: true
          schema:
            $ref: "#/definitions/OrgLogin"
      responses:
        "200":
          description: Login Successful
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"

  # Connections relaed apis
  /connections:
    get:
      security:
        - Bearer: []
      tags:
        - Connections
      summary: Returns current connections
      description: Returns current connections of Organization or Candidate
      parameters:
        - name: orgId
          in: query
          description: Provide either orgId here or candidateId. Only 1 of these should be provided
          required: false
          type: string
        - name: candidateId
          in: query
          description: Provide either candidateId here or orgId. Only 1 of these should be provided
          required: false
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ApiResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"
  /connections/create-invitation:
    post:
      security:
        - Bearer: []
      tags:
        - Connections
      summary: Create a new connection invitation
      description: Create a new connection invitation
      parameters:
        - in: body
          name: body
          description: Provide organization and candidate info to onboard candidate
          required: true
          schema:
            $ref: "#/definitions/CreateInvitation"
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ApiResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"
  /connections/receive-invitation:
    post:
      security:
        - Bearer: []
      tags:
        - Connections
      summary: Receive a new connection invitation
      description: Receive a new connection invitation
      parameters:
        - in: body
          name: body
          description: Provide organization and candidate info to Receive Invitation
          required: true
          schema:
            $ref: "#/definitions/ReceiveInvitation"
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ApiResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"

  # Certificates relaed apis
  /certificates:
    get:
      security:
        - Bearer: []
      tags:
        - Certificates
      summary: Fetch certificates
      description: Fetch issued or verified certificates
      parameters:
        - name: candidateId
          in: query
          description: Provide either candidateId OR orgId and isVerifier
          required: false
          type: string
        - name: orgId
          in: query
          description: Provide either candidateId OR orgId and isVerifier
          required: false
          type: string
        - name: isVerifier
          in: query
          description: True if certificates verified by current organization need to be fetched
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"
  /certificates/schemas:
    get:
      security:
        - Bearer: []
      tags:
        - Certificates
      summary: Fetch schemas
      description: Fetch schemas
      parameters:
        - name: orgId
          in: query
          description: Provide orgId
          required: false
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"
  /certificates/certificate-details:
    get:
      security:
        - Bearer: []
      tags:
        - Certificates
      summary: Get details of a certificate
      description: Get details of a certificate
      parameters:
        - name: certificateId
          in: query
          description: Provide the certificate Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"
  /certificates/create-schema:
    post:
      security:
        - Bearer: []
      tags:
        - Certificates
      summary: Create a new Certificate schema / template
      description: Create a new Certificate schema / template
      parameters:
        - in: body
          name: body
          description: Provide Certificate schema / template info
          required: true
          schema:
            $ref: "#/definitions/CreateSchema"
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ApiResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"
  /certificates/issue-certificate:
    post:
      security:
        - Bearer: []
      tags:
        - Certificates
      summary: issue certificate
      description: Issue certificate to candidates
      parameters:
        - in: body
          name: body
          description: Provide Data to issue Certificate
          required: true
          schema:
            $ref: "#/definitions/IssueCertificate"
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ApiResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"
  /certificates/store-certificate:
    post:
      security:
        - Bearer: []
      tags:
        - Certificates
      summary: store certificate
      description: Store/Save certificate issued by organization in Wallet
      parameters:
        - in: body
          name: body
          description: Provide Data to store Certificate
          required: true
          schema:
            $ref: "#/definitions/StoreCertificate"
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ApiResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"

  # Verifications relaed apis
  /verifications/start-verification:
    post:
      security:
        - Bearer: []
      tags:
        - Verifications​
      summary: start verification
      description: Start verification for a candidate
      parameters:
        - in: body
          name: body
          description: Provide Data to start verification
          required: true
          schema:
            $ref: "#/definitions/StartVerification"
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"
  /verifications/allow-verification:
    post:
      security:
        - Bearer: []
      tags:
        - Verifications​
      summary: Allow/Approve verification start
      description: Allow/Approve verification start by candidate
      parameters:
        - in: body
          name: body
          description: Provide Data to allow verification
          required: true
          schema:
            $ref: "#/definitions/AllowVerification"
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"
  /verifications/send-request:
    post:
      security:
        - Bearer: []
      tags:
        - Verifications​
      summary: Send verification request to candidate
      description: Send verification request to candidate
      parameters:
        - in: body
          name: body
          description: Provide Data for sending verification request
          required: true
          schema:
            $ref: "#/definitions/SendRequest"
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"

  # Certificates relaed apis
  /general/pending-tasks:
    get:
      security:
        - Bearer: []
      tags:
        - General
      summary: Fetch pending actions items for candidate
      description: Fetch pending actions items for candidate
      parameters:
        - name: candidateId
          in: query
          description: Provide candidateId
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ApiResponse"

#Security
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

# complex objects have schema definitions
definitions:
  CandidateSignup:
    required:
      - name
      - email
      - mobile
      - password
    properties:
      name:
        type: string
        description: Full name of user
        example: "Kapil Kathuria"
      email:
        type: string
        description: email of user
        example: "kapil@attested.in"
      mobile:
        type: string
        description: mobile of candidate
        example: "8956247231"
      password:
        type: string
        description: password of the user (at least 1 capital, 1 numeric and 1 special character)
        example: "Attested@1n"
  UserLogin:
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: email of user
        example: "kapil@attested.in"
      password:
        type: string
        description: password of the user
        example: "Attested@1n"
  UserInfo:
    properties:
      email:
        type: string
        description: email of user
        example: "kapil@attested.in"

  OrgSignup:
    required:
      - name
      - email
      - type
      - password
    properties:
      name:
        type: string
        description: Full name of Org
        example: "Attested India Pvt Lt."
      email:
        type: string
        description: email of Org
        example: "hr@attested.in"
      type:
        type: string
        description: Type of organization. Allowed ['employer', 'verifier', 'college']
        example: "employer"
      password:
        type: string
        description: password of the user (at least 1 capital, 1 numeric and 1 special character)
        example: "Attested@1n"
  OrgLogin:
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: email of user
        example: "hr@attested.in"
      password:
        type: string
        description: password of the user
        example: "Attested@1n"

  CreateInvitation:
    required:
      - orgId
      - candidateId
    properties:
      orgId:
        type: string
        description: Id of organization
        example: "5ff85766f827e903e73fb2b7"
      candidateId:
        type: string
        description: Id of Candidate
        example: "5ff85766f827e903e73fb2ba"
      message:
        type: string
        description: Connect message from organization to candidate
        example: "Hello, this is connection request from Attested.in to issue your experience letter"
  ReceiveInvitation:
    required:
      - orgId
      - candidateId
    properties:
      orgId:
        type: string
        description: Id of organization
        example: "5ff85766f827e903e73fb2b7"
      candidateId:
        type: string
        description: Id of Candidate
        example: "5ff85766f827e903e73fb2ba"
      isApproved:
        type: boolean
        description: Candidate's response by button click in UI. true = candidate approved connecting to organization
        example: true
        default: true
      declinedReason:
        type: string
        description: Reason for declining the Invitation
        example: ""

  CreateSchema:
    required:
      - orgId
      - name
      - version
      - attributes
    properties:
      orgId:
        type: string
        description: Id of organization
        example: "5ff85766f827e903e73fb2b7"
      name:
        type: string
        description: Name for Certificate schema / template - usually this is company name plus type of certificate
        example: "attested-experience-letter"
      version:
        type: string
        description: version number
        example: "1.0"
      tag:
        type: string
        description: type of certificate
        example: "experience-letter"
      attributes:
        type: array
        items:
          type: string
        description: All attributes in this template
        example: ["firstName", "lastName", "age"]
  IssueCertificate:
    required:
      - orgId
      - candidateId
      - schemaId
      - attributes
    properties:
      orgId:
        type: string
        description: Id of organization
        example: "5ff85766f827e903e73fb2b7"
      candidateId:
        type: string
        description: Id of Candidate
        example: "5ff85766f827e903e73fb2ba"
      schemaId:
        type: string
        description: Id of Schema for Certificate
        example: "5ff857f25d5ad30416e24bf2"
      attributes:
        type: array
        items:
          type: object
        description: Data for certificate
        example:
          [
            { "name": "firstName", "value": "Harry" },
            { "name": "lastName", "value": "Potter" },
            { "name": "age", "value": "20" },
          ]
  StoreCertificate:
    required:
      - certificateId
      - approve
    properties:
      certificateId:
        type: string
        description: Id of Certificate
        example: "5ff67304da0f322388fcd953"
      approve:
        type: boolean
        description: Candidate's response by button click in UI. true = candidate approved certificate
        example: true
        default: true
      declinedReason:
        type: string
        description: Reason for declining the certificate
        example: ""

  StartVerification:
    required:
      - orgId
      - candidateId
    properties:
      orgId:
        type: string
        description: Id of organization
        example: "5ff85766f827e903e73fb2b7"
      candidateId:
        type: string
        description: Id of Candidate
        example: "5ff85766f827e903e73fb2ba"
      message:
        type: string
        description: Verification start message from organization to candidate
        example: "Hello, Microsoft has appointed to do background checkout for your employment at Microsoft"
  AllowVerification:
    required:
      - verificationId      -
    properties:
      verificationId:
        type: string
        description: Verification Id
        example: "6000f5f62d6d91681aa9d239"
      certificateId:
        type: string
        description: Id of Certificate
        example: "5ff67304da0f322388fcd953"
      isApproved:
        type: boolean
        description: Candidate's response by button click in UI. true = candidate approved verification start
        example: true
        default: true
      declinedReason:
        type: string
        description: Reason for declining the verification
        example: ""
  SendRequest:
    required:
      - verificationId      -
    properties:
      verificationId:
        type: string
        description: Verification Id
        example: "6000f5f62d6d91681aa9d239"

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object

#Link to external document
externalDocs:
  description: "Find out more about Attested Product"
  url: "https://attested.in/"
